{
  "db_name": "PostgreSQL",
  "query": "\n        WITH oldest_post AS (\n            SELECT\n                post.uuid,\n                post.created_at\n            FROM posts post\n            WHERE post.author_id = $1\n            AND post.deleted IS NOT TRUE\n            ORDER BY post.created_at ASC\n            LIMIT 1\n        ), newest_post AS (\n            SELECT\n                post.uuid,\n                post.created_at\n            FROM posts post\n            WHERE post.author_id = $1\n            AND post.deleted IS NOT TRUE\n            ORDER BY post.created_at DESC\n            LIMIT 1\n        ), oldest_comment AS (\n            SELECT\n                comment.uuid,\n                comment.created_at\n            FROM comments comment\n            WHERE comment.author_id = $1\n            AND comment.deleted IS NOT TRUE\n            ORDER BY comment.created_at ASC\n            LIMIT 1\n        ), newest_comment AS (\n            SELECT\n                comment.uuid,\n                comment.created_at\n            FROM comments comment\n            WHERE comment.author_id = $1\n            AND comment.deleted IS NOT TRUE\n            ORDER BY comment.created_at DESC\n            LIMIT 1\n        )\n        SELECT \n            oldest_post.uuid AS \"oldest_post_uuid: Option<post::Uuid>\",\n            oldest_post.created_at AS \"oldest_post_date: Option<post::CreatedAt>\",\n            newest_post.uuid AS \"newest_post_uuid: Option<post::Uuid>\",\n            newest_post.created_at AS \"newest_post_date: Option<post::CreatedAt>\",\n            oldest_comment.uuid AS \"oldest_comment_uuid: Option<comment::Uuid>\",\n            oldest_comment.created_at AS \"oldest_comment_date: Option<comment::CreatedAt>\",\n            newest_comment.uuid AS \"newest_comment_uuid: Option<comment::Uuid>\",\n            newest_comment.created_at AS \"newest_comment_date: Option<comment::CreatedAt>\"\n        FROM users usr\n        LEFT JOIN oldest_post ON true\n        LEFT JOIN newest_post ON true\n        LEFT JOIN oldest_comment ON true\n        LEFT JOIN newest_comment ON true\n        WHERE usr.id = $1\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "oldest_post_uuid: Option<post::Uuid>",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "oldest_post_date: Option<post::CreatedAt>",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 2,
        "name": "newest_post_uuid: Option<post::Uuid>",
        "type_info": "Uuid"
      },
      {
        "ordinal": 3,
        "name": "newest_post_date: Option<post::CreatedAt>",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 4,
        "name": "oldest_comment_uuid: Option<comment::Uuid>",
        "type_info": "Uuid"
      },
      {
        "ordinal": 5,
        "name": "oldest_comment_date: Option<comment::CreatedAt>",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 6,
        "name": "newest_comment_uuid: Option<comment::Uuid>",
        "type_info": "Uuid"
      },
      {
        "ordinal": 7,
        "name": "newest_comment_date: Option<comment::CreatedAt>",
        "type_info": "Timestamptz"
      }
    ],
    "parameters": {
      "Left": [
        "Int4"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ]
  },
  "hash": "3ca3f7f9aa51f6a8f69b2d05ec0c126e8e1bd2750472fbe168d28bb2288c7af0"
}
